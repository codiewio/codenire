// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.2.0 DO NOT EDIT.
package api

// Defines values for ActionItemResponseEnableExternalCommands.
const (
	ActionItemResponseEnableExternalCommandsAll     ActionItemResponseEnableExternalCommands = "all"
	ActionItemResponseEnableExternalCommandsCompile ActionItemResponseEnableExternalCommands = "compile"
	ActionItemResponseEnableExternalCommandsNone    ActionItemResponseEnableExternalCommands = "none"
	ActionItemResponseEnableExternalCommandsRun     ActionItemResponseEnableExternalCommands = "run"
)

// Defines values for ImageActionConfigEnableExternalCommands.
const (
	ImageActionConfigEnableExternalCommandsAll     ImageActionConfigEnableExternalCommands = "all"
	ImageActionConfigEnableExternalCommandsCompile ImageActionConfigEnableExternalCommands = "compile"
	ImageActionConfigEnableExternalCommandsNone    ImageActionConfigEnableExternalCommands = "none"
	ImageActionConfigEnableExternalCommandsRun     ImageActionConfigEnableExternalCommands = "run"
)

// ActionItemResponse defines model for ActionItemResponse.
type ActionItemResponse struct {
	CompileCmd string `json:"CompileCmd"`

	// Connections Databases. Currently available only ['postgres']
	Connections      []string          `json:"Connections"`
	ContainerOptions ContainerOptions  `json:"ContainerOptions"`
	DefaultFiles     map[string]string `json:"DefaultFiles"`

	// EnableExternalCommands It allows overriding CompileCmd and RunCmd in each request.
	EnableExternalCommands ActionItemResponseEnableExternalCommands `json:"EnableExternalCommands"`
	Enabled                bool                                     `json:"Enabled"`
	Groups                 []string                                 `json:"Groups"`
	Id                     string                                   `json:"Id"`
	IsDefault              bool                                     `json:"IsDefault"`
	IsSupportPackage       bool                                     `json:"IsSupportPackage"`
	Name                   string                                   `json:"Name"`
	Provider               string                                   `json:"Provider"`
	RunCmd                 string                                   `json:"RunCmd"`
	ScriptOptions          ImageConfigScriptOptions                 `json:"ScriptOptions"`
	Template               string                                   `json:"Template"`
	Version                string                                   `json:"Version"`
	Workdir                string                                   `json:"Workdir"`
}

// ActionItemResponseEnableExternalCommands It allows overriding CompileCmd and RunCmd in each request.
type ActionItemResponseEnableExternalCommands string

// ActionListResponse defines model for ActionListResponse.
type ActionListResponse = []ActionItemResponse

// CommonSubmissionRequest defines model for CommonSubmissionRequest.
type CommonSubmissionRequest struct {
	ActionId *string `json:"ActionId,omitempty"`
	Args     string  `json:"Args"`

	// ExternalOptions external options like CompileCmd or RunCmd
	ExternalOptions *map[string]string `json:"ExternalOptions,omitempty"`

	// Stdin data which will available via stdin reader
	Stdin      string `json:"Stdin"`
	TemplateId string `json:"TemplateId"`
}

// ContainerOptions defines model for ContainerOptions.
type ContainerOptions struct {
	CompileTTL  *int `json:"CompileTTL,omitempty"`
	MemoryLimit *int `json:"MemoryLimit,omitempty"`
	RunTTL      *int `json:"RunTTL,omitempty"`
}

// ImageActionConfig defines model for ImageActionConfig.
type ImageActionConfig struct {
	CompileCmd   string            `json:"CompileCmd"`
	DefaultFiles map[string]string `json:"DefaultFiles"`

	// EnableExternalCommands It allows overriding CompileCmd and RunCmd in each request.
	EnableExternalCommands ImageActionConfigEnableExternalCommands `json:"EnableExternalCommands"`
	Id                     string                                  `json:"Id"`
	IsDefault              bool                                    `json:"IsDefault"`
	Name                   string                                  `json:"Name"`
	RunCmd                 string                                  `json:"RunCmd"`
	ScriptOptions          ImageConfigScriptOptions                `json:"ScriptOptions"`
}

// ImageActionConfigEnableExternalCommands It allows overriding CompileCmd and RunCmd in each request.
type ImageActionConfigEnableExternalCommands string

// ImageConfig defines model for ImageConfig.
type ImageConfig struct {
	Actions map[string]ImageActionConfig `json:"Actions"`

	// Connections Databases. Currently available only ['postgres']
	Connections      []string         `json:"Connections"`
	ContainerOptions ContainerOptions `json:"ContainerOptions"`
	Enabled          bool             `json:"Enabled"`
	Groups           []string         `json:"Groups"`
	IsSupportPackage bool             `json:"IsSupportPackage"`
	Provider         string           `json:"Provider"`
	Template         string           `json:"Template"`
	Version          string           `json:"Version"`
	Workdir          string           `json:"Workdir"`
}

// ImageConfigScriptOptions defines model for ImageConfigScriptOptions.
type ImageConfigScriptOptions struct {
	SourceFile string `json:"SourceFile"`
}

// ImageTemplateConfig defines model for ImageTemplateConfig.
type ImageTemplateConfig struct {
	// Connections Databases. Currently available only ['postgres']
	Connections      []string         `json:"Connections"`
	ContainerOptions ContainerOptions `json:"ContainerOptions"`
	Enabled          bool             `json:"Enabled"`
	Groups           []string         `json:"Groups"`
	IsSupportPackage bool             `json:"IsSupportPackage"`
	Provider         string           `json:"Provider"`
	Template         string           `json:"Template"`
	Version          string           `json:"Version"`
	Workdir          string           `json:"Workdir"`
}

// RunEnvironment defines model for RunEnvironment.
type RunEnvironment struct {
	ActionName  string  `json:"ActionName"`
	CompileCmd  string  `json:"CompileCmd"`
	CompileTime float32 `json:"CompileTime"`
	RunCmd      string  `json:"RunCmd"`
	RunTime     float32 `json:"RunTime"`
}

// SandboxRequest defines model for SandboxRequest.
type SandboxRequest struct {
	Action string `json:"action"`
	Args   string `json:"args"`

	// Binary files in tar archive encoded with base64
	Binary          string             `json:"binary"`
	ExtendedOptions *map[string]string `json:"extendedOptions,omitempty"`
	SandId          string             `json:"sandId"`

	// Stdin data which will available via stdin reader
	Stdin string `json:"stdin"`
}

// SandboxResponse defines model for SandboxResponse.
type SandboxResponse struct {
	RunEnvironment RunEnvironment `json:"RunEnvironment"`
	Error          *string        `json:"error,omitempty"`
	ExitCode       int            `json:"exitCode"`
	Stderr         []byte         `json:"stderr"`
	Stdout         []byte         `json:"stdout"`
}

// SubmissionRequest defines model for SubmissionRequest.
type SubmissionRequest struct {
	ActionId *string `json:"ActionId,omitempty"`
	Args     string  `json:"Args"`

	// ExternalOptions external options like CompileCmd or RunCmd
	ExternalOptions *map[string]string `json:"ExternalOptions,omitempty"`
	Files           map[string]string  `json:"Files"`

	// Stdin data which will available via stdin reader
	Stdin      string `json:"Stdin"`
	TemplateId string `json:"TemplateId"`
}

// SubmissionResponse defines model for SubmissionResponse.
type SubmissionResponse struct {
	Events         []SubmissionResponseEvents `json:"Events"`
	RunEnvironment RunEnvironment             `json:"RunEnvironment"`
}

// SubmissionResponseEvents defines model for SubmissionResponseEvents.
type SubmissionResponseEvents struct {
	Kind    string `json:"Kind"`
	Message string `json:"Message"`
}

// SubmissionScriptRequest defines model for SubmissionScriptRequest.
type SubmissionScriptRequest struct {
	ActionId *string `json:"ActionId,omitempty"`
	Args     string  `json:"Args"`
	Code     string  `json:"Code"`

	// ExternalOptions external options like CompileCmd or RunCmd
	ExternalOptions *map[string]string `json:"ExternalOptions,omitempty"`

	// Stdin data which will available via stdin reader
	Stdin      string `json:"Stdin"`
	TemplateId string `json:"TemplateId"`
}

// TemplateItemResponse defines model for TemplateItemResponse.
type TemplateItemResponse struct {
	Actions    *[]string `json:"Actions,omitempty"`
	TemplateId *string   `json:"TemplateId,omitempty"`
}

// RunFilesSubmissionJSONRequestBody defines body for RunFilesSubmission for application/json ContentType.
type RunFilesSubmissionJSONRequestBody = SubmissionRequest

// RunScriptSubmissionJSONRequestBody defines body for RunScriptSubmission for application/json ContentType.
type RunScriptSubmissionJSONRequestBody = SubmissionScriptRequest
